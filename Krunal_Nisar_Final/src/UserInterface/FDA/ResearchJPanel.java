/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.FDA;

import Business.Enterprise.Enterprise;
import Business.Enterprise.FDAEnterprise;
import Business.Enterprise.PharmaceuticalEnterprise;
import Business.Enterprise.PharmacyEnterprise;
import Business.Medication.Prescription;
import Business.Medicine.Medicine;
import Business.Network.City;
import Business.Network.Network;
import Business.Network.State;
import Business.Organization.DoctorOrganization;
import Business.Organization.ManuactureOrganization;
import Business.Organization.Organization;
import Business.Organization.PatientOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.DoctortoFDAWorkRequest;
import Business.WorkQueue.FDAWorkRequest;
import Business.WorkQueue.FDAtoManufactureWorkRequest;
import Business.WorkQueue.PatientWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Krunal Nisar
 */
public class ResearchJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ResearchJPanel
     */
     FDAEnterprise enterprise;
    JPanel userProcessContainer;
    UserAccount userAccount;
    Network network;
    Organization organization;
    
    public ResearchJPanel(JPanel userProcessContainer,Enterprise enterprise,Network network,UserAccount userAccount,Organization organization) 
    {
        initComponents();
        this.userProcessContainer= userProcessContainer;
        this.enterprise = (FDAEnterprise) enterprise;
        this.userAccount = userAccount;
        this.network =network;
        this.organization = organization;
        populateTable();
        RequestCitizenTable();
        RequestManufactureTable();
    }
    
    public void populateTable()
    {
       DefaultTableModel model = (DefaultTableModel) MedicineTable.getModel();
       System.out.println(organization);
        model.setRowCount(0);
        for(Medicine medicne : enterprise.getApprovedList())
        
            {
            
            Object row [] = new Object[5];
            row[0]= medicne;
            row[1]=medicne.getDescription();
            row[2]=medicne.getCategory();
            row[3]=medicne.getManufactureName();
            row[4]=medicne.getDate();
            model.addRow(row);
            }
        
    }
    
    public void RequestCitizenTable()
    {
        DefaultTableModel model = (DefaultTableModel) CitizenTable.getModel();
        
        model.setRowCount(0);
        for(WorkRequest wr : userAccount.getWorkQueue().getWorkRequestList())
        {
            if(wr instanceof PatientWorkRequest)
            {
            Object row [] = new Object[4];
            row[0]= ((PatientWorkRequest)wr).getMedicine();
            row[1]=wr;
            row[2]=wr.getSender();
            row[3]=wr.getStatus();
            model.addRow(row);
            }
        }
    }
    
    public void RequestManufactureTable()
    {
        DefaultTableModel model = (DefaultTableModel) ManufactureTable.getModel();
        
        model.setRowCount(0);
        for(WorkRequest wr : userAccount.getWorkQueue().getWorkRequestList())
        {
            if(wr instanceof FDAtoManufactureWorkRequest)
            {
            Object row [] = new Object[5];
            row[0]= ((FDAtoManufactureWorkRequest)wr).getMedicine();
            row[1]=((FDAtoManufactureWorkRequest)wr).getMedicine().getSideEffects();
            row[2]=wr.getSender();
            row[3]=wr.getReceiver();
            row[4]=wr;
            model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        MedicineTable = new javax.swing.JTable();
        backJButton = new javax.swing.JButton();
        CitizenButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        SuugestionTF = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ManufactureTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        SuugestionTF1 = new javax.swing.JTextField();
        ManufacturButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        CitizenTable = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MedicineTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Medicine", "Description", "Category", "Manufacture", "Date of Expirty"
            }
        ));
        jScrollPane1.setViewportView(MedicineTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 130, 742, 103));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 690, -1, -1));

        CitizenButton.setText("Notify Citizens");
        CitizenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CitizenButtonActionPerformed(evt);
            }
        });
        add(CitizenButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 360, 200, 50));

        jLabel1.setText("Message");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 320, 62, 32));
        add(SuugestionTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 320, 108, 25));

        ManufactureTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Medicine", "Side Effects", "Sender", "Reciever", "Status"
            }
        ));
        jScrollPane2.setViewportView(ManufactureTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(328, 540, 571, 114));

        jLabel2.setText("Message");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 560, 62, 32));
        add(SuugestionTF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 565, 110, 30));

        ManufacturButton.setText("Alert Manufacture");
        ManufacturButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ManufacturButtonActionPerformed(evt);
            }
        });
        add(ManufacturButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 610, 180, 40));

        CitizenTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Medicine", "Side Effects", "Sender", "Status"
            }
        ));
        jScrollPane3.setViewportView(CitizenTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 320, 550, 93));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("         View Complains and Alerts");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 13, 414, 41));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Public Safety Alerts ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 270, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Medicine List");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel7.setText("Manufacture Alerts");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 490, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed

    private void CitizenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CitizenButtonActionPerformed
        // TODO add your handling code here:
            int selectRow = MedicineTable.getSelectedRow();
        if(selectRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Kindly Select a row");
            return;
        }
        
        Medicine medicine = (Medicine) MedicineTable.getValueAt(selectRow, 0);
        Organization org =null;
        String suggesstion = SuugestionTF.getText();
        PatientWorkRequest request = new PatientWorkRequest();
        request.setMedicine(medicine);
        request.setMessage(medicine.getSideEffects());
        request.setSender(userAccount);
        request.setStatus(SuugestionTF.getText());
        for(State state : network.getStateList())
        {
            for(City city : state.getCityList())
            {
                for(Enterprise e : city.getEnterpriseDir().getEnterpriseList())
                {
                    for(Organization o : e.getOrganizationDir().getOrganizationList())
                    {
                        if(o instanceof PatientOrganization || (o instanceof DoctorOrganization))
                        {
                            
                            org = o;
                            org.getWorkQueue().getWorkRequestList().add(request);
                        }
                    }
                }
            }
        }
        
        if(org != null)
        {
            
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            RequestCitizenTable();
        }
    }//GEN-LAST:event_CitizenButtonActionPerformed

    private void ManufacturButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ManufacturButtonActionPerformed
        // TODO add your handling code here:
        int selectRow = MedicineTable.getSelectedRow();
        if(selectRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Kindly Select a row");
            return;
        }
        
        ManuactureOrganization org = null ;
        Medicine medicine = (Medicine) MedicineTable.getValueAt(selectRow, 0);
        String name = medicine.getManufactureName();
        System.out.println(name);
        FDAtoManufactureWorkRequest request = new FDAtoManufactureWorkRequest();
        request.setMedicine(medicine);
        request.setEffects(medicine.getSideEffects());
        request.setSender(userAccount);
        request.setMessage(SuugestionTF1.getText());
        for(State state : network.getStateList())
        {
            for(City city : state.getCityList())
            {
                for(Enterprise e : city.getEnterpriseDir().getEnterpriseList())
                {
                    if(e instanceof PharmaceuticalEnterprise)
                            {
                                
                                
                                
                                    for(Organization o : e.getOrganizationDir().getOrganizationList())
                                {
                                    System.out.println(o.getName());
                                    if(o.getName().equals(name))
                                    {
                                    org=(ManuactureOrganization) o;
                                     break;
                                    }
                                }
                                
                                
                            }
                }
            }
        }
        
        if(org != null)
        {
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
            RequestManufactureTable();
        }
        
        
    }//GEN-LAST:event_ManufacturButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CitizenButton;
    private javax.swing.JTable CitizenTable;
    private javax.swing.JButton ManufacturButton;
    private javax.swing.JTable ManufactureTable;
    private javax.swing.JTable MedicineTable;
    private javax.swing.JTextField SuugestionTF;
    private javax.swing.JTextField SuugestionTF1;
    private javax.swing.JButton backJButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
