/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.FDA;

import Business.Doctor.Doctor;
import Business.Encounter.Encounter;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FDAEnterprise;
import Business.Medication.Medication;
import Business.Medication.Prescription;
import Business.Medicine.Medicine;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import Business.VitalSigns.VitalSign;
import Business.WorkQueue.DoctortoFDAWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Krunal Nisar
 */

public class ViewComplainJPanel extends javax.swing.JPanel {

       FDAEnterprise enterprise;
    JPanel userProcessContainer;
    UserAccount userAccount;
    Network network;
    Organization organization;
    /**
     * Creates new form ViewComplainJPanel
     */
    public ViewComplainJPanel(JPanel userProcessContainer,Enterprise enterprise,Network network,UserAccount userAccount,Organization organization) {
        initComponents();
        this.userProcessContainer= userProcessContainer;
        this.enterprise = (FDAEnterprise) enterprise;
        this.userAccount = userAccount;
        this.network =network;
        this.organization = organization;
        populateTable();
        
    }

    public void populateGraph()
    {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        JFreeChart chart = null;
        int i=0;
        int j=0;

       

        for(Medicine medicine : enterprise.getSuspiousList())
        {
          //  if(encounter.getDoctor().equals(doctor))
            {
                
                dataset.setValue(medicine.getCount(),medicine.getCategory(),medicine.getName());
                dataset.setValue(medicine.getCount(),medicine.getCategory(),medicine.getName());
                
                chart = ChartFactory.createBarChart("Suspicious Drug ", "Drugs", "Count", dataset, PlotOrientation.VERTICAL, true, true, true);
                CategoryPlot p =chart.getCategoryPlot();
                p.setRangeGridlinePaint(Color.black);
               
            }
        }

        ChartPanel barPanel = new ChartPanel(chart);
        ChartJPanel.removeAll();
        ChartJPanel.add(barPanel , BorderLayout.CENTER);
        ChartJPanel.validate();
    }
    public void populateTable()
        {
            
        DefaultTableModel model = (DefaultTableModel) ComplainTable.getModel();
        
        model.setRowCount(0);
        for(WorkRequest wr : organization.getWorkQueue().getWorkRequestList())
        {
            if(wr instanceof DoctortoFDAWorkRequest)
            {
            Object row [] = new Object[4];
            row[0]= wr;
            row[1]=wr.getSender();
            row[2]=((DoctortoFDAWorkRequest)wr).getPrescription();
            //row[3]=wr.getEnocunter();
            row[3]=wr.getStatus();
            model.addRow(row);
        }}
        
        }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ComplainTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        SideEffectsTF = new javax.swing.JTextField();
        ChartJPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        backJButton = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ComplainTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Reaction", "Doctor", "Medicine", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ComplainTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 900, 95));

        jButton1.setText("Add To Suspious List");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 170, -1, -1));

        jButton2.setText("View Suspious Medicines Graph");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, 253, -1));

        jLabel2.setText("Side Effects");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 170, 100, 20));
        add(SideEffectsTF, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 170, 123, -1));

        ChartJPanel.setLayout(new java.awt.BorderLayout());
        add(ChartJPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(66, 227, 903, 563));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("Risk Mitigation and Evaluatiion Center");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 10, 414, 41));

        backJButton.setText("<< Back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectRow = ComplainTable.getSelectedRow();
        if(selectRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Kindly Select a row");
            return;
        }
        
        DoctortoFDAWorkRequest request = (DoctortoFDAWorkRequest) ComplainTable.getValueAt(selectRow, 0);
        Prescription prescription = request.getPrescription();
        for(Medication medication : prescription.getMedicationList())
        {
            if(medication == null)
            {
                return;
            }
            Medicine medicine = medication.getMedicine();
            medicine.setCount(medicine.getCount() + 1);
            System.out.println("Count"+medicine.getCount());
            medicine.setSideEffects(SideEffectsTF.getText());
            
            if(enterprise.searchMedicine(medicine))
            {
                
            }
            else
            {
                enterprise.getSuspiousList().add(medicine);  
            System.out.println(enterprise.getSuspiousList());
            }
            
            
        }
       
        //Medicine medicine = FDAWorkRequest.getMedicine();
        //medicine.setSideEffects(SideEffectsTF.getText());
      //  Employee e = userAccount.getEmployee();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        populateGraph();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel ChartJPanel;
    private javax.swing.JTable ComplainTable;
    private javax.swing.JTextField SideEffectsTF;
    private javax.swing.JButton backJButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
