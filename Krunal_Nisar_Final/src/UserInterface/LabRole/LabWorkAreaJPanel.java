/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.LabRole;

import Business.EcoSystem;
import Business.Encounter.Encounter;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.Patient.Patient;
import Business.Report.Assessment;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.LabWorkRequest;
import Business.WorkQueue.NurseWorkRequest;
import Business.WorkQueue.WorkRequest;
import UserInterface.DoctorRole.CreatePaitentJPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Krunal Nisar
 */
public class LabWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form LabWorkAreaJPanel
     */
    JPanel userProcessContainer;
    UserAccount userAccount; 
    Organization organization;
    Enterprise enterprise;
    Network network;

    public LabWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, EcoSystem system, Network network) {
        initComponents();
           this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise=enterprise;
        this.userAccount = userAccount;
        this.network = network;
        labTable();
//        System.out.println(organization);
//        System.out.println(userAccount);
//        System.out.println(enterprise);
//        System.out.println(network);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
        public void labTable()
        {
            
             DefaultTableModel model = (DefaultTableModel) LabRequestTable.getModel();
        
        model.setRowCount(0);
        for(WorkRequest wr : organization.getWorkQueue().getWorkRequestList())
        {
            Object row [] = new Object[6];
            row[0]= wr;
            row[1]=wr.getPatient().getName();
            row[2]=wr.getEnocunter();
            row[3]=wr.getSender();
            row[4]=wr.getReceiver();
            String result = ((LabWorkRequest)wr).getTestResult();
            row[5]=result==null ? "waiting" : result;
            model.addRow(row);
        }
        }
        
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        LabRequestTable = new javax.swing.JTable();
        ProcessButton = new javax.swing.JButton();
        AssisgnButtoon = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LabRequestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Message", "patient", "Reason", "Sender", "Receiver", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(LabRequestTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 80, 710, 97));

        ProcessButton.setText("Process Request ");
        ProcessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProcessButtonActionPerformed(evt);
            }
        });
        add(ProcessButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 210, 150, 40));

        AssisgnButtoon.setText("Assign to me");
        AssisgnButtoon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AssisgnButtoonActionPerformed(evt);
            }
        });
        add(AssisgnButtoon, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 210, 110, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setText("              Lab Work Area");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 20, 381, 41));

        jButton1.setText("<<Back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, 100, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void ProcessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProcessButtonActionPerformed
        // TODO add your handling code here:
        int selectRow = LabRequestTable.getSelectedRow();
        if(selectRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Kindly Select a row");
            return;
        }
        
        WorkRequest workRequest = (WorkRequest) LabRequestTable.getValueAt(selectRow, 0);
        //Patient patient = workRequest.getPatient();
        Encounter encounter = workRequest.getEnocunter();
        //Assessment assessment = encounter.getAssessmentHistory().createAssessment();
        
        LabProcessResultWorkArea lprwa = new LabProcessResultWorkArea(userProcessContainer,userAccount,encounter,enterprise,network,workRequest);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("LabProcessResultWorkArea", lprwa);
        layout.next(userProcessContainer);
        
        
        
    }//GEN-LAST:event_ProcessButtonActionPerformed

    private void AssisgnButtoonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AssisgnButtoonActionPerformed
        // TODO add your handling code here:
        int selectRow = LabRequestTable.getSelectedRow();
        if(selectRow < 0)
        {
            JOptionPane.showMessageDialog(null, "Kindly Select a row");
            return;
        }
        
        WorkRequest workRequest = (WorkRequest) LabRequestTable.getValueAt(selectRow, 0);
        workRequest.setReceiver(userAccount);
        workRequest.setStatus("pending");
        labTable();
        
    }//GEN-LAST:event_AssisgnButtoonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AssisgnButtoon;
    private javax.swing.JTable LabRequestTable;
    private javax.swing.JButton ProcessButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
